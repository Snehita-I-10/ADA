#include <bits/stdc++.h> 
using namespace std; 
  

  
#define INF 99999  
  
// A function to print the solution matrix  
void printSolution(int dist[][20]);  
  
void floydWarshall (int graph[][20],int V)  
{  
    for (i = 0; i < V; i++)  
        for (j = 0; j < V; j++)  
            dist[i][j] = graph[i][j];  
    for (k = 0; k < V; k++)  
    {  
        for (i = 0; i < V; i++)  
        {  
            
            for (j = 0; j < V; j++)  
            {  
                if (dist[i][k] + dist[k][j] < dist[i][j])  
                    dist[i][j] = dist[i][k] + dist[k][j];  
            }  
        }  
    }  
  
    printSolution(dist,V);  
}  
  
void printSolution(int dist[][20],int V)  
{   
    for (int i = 0; i < V; i++)  
    {  
        for (int j = 0; j < V; j++)  
        {  
            if (dist[i][j] == INF)  
                cout<<"INF"<<"     ";  
            else
                cout<<dist[i][j]<<"     ";  
        }  
        cout<<endl;  
    }  
}  
   
int main()  
{  int V;
    cout<<"Enter the no of vertices";
    cin>>V;
    int graph[V][V];
    cout<<"enter the adjacency matrix";
    for(int i=0;i<V;i++)
    {
    for(int j=0;j<V;j++)
    {cin>>graph[i][j];
    }
    }
    
    floydWarshall(graph,V);  
    return 0;  
}  
  
